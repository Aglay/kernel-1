#!/bin/sh

SUDO=${SUDO:-sudo}
if [ `id -u` = 0 ]; then
	unset SUDO
fi

# mkdiskimg - prepare a disk image for the kernel
# usage: mkdiskimg [size in mb, default: 40]

imgfile=disk.img
if [ -e $imgfile ]; then
	echo "file '$imgfile' exists, will not overwrite, delete it first" >&2
	exit 1
fi

if [ -n "$1" ]; then
	sizemb=$1
else
	sizemb=40
fi

# create the image file
echo 'creating image file ...'
dd if=/dev/zero of=$imgfile bs=1M count=$sizemb || exit 1

mkpart_linux()
{
	sfdisk -q $imgfile <<EOF
,,cc
EOF
}

mkpart_fbsd()
{
	devfile=`$SUDO mdconfig -a -t vnode -f $imgfile`
	if [ $? != 0 ]; then
		echo "failed to map $imgfile as a memory device, need root" >&2
		exit 1
	fi

	$SUDO fdisk -q -f - /dev/$devfile <<EOF
p 1 204 * *
EOF
	$SUDO mdconfig -d -u $devfile
}

# create partition table
echo 'creating partition table with a single partition ...'
sys=`uname -s`
if [ $sys = Linux ]; then
	mkpart_linux
elif [ $sys = FreeBSD ]; then
	mkpart_fbsd
else
	echo "don't know how to partition the image on your system."
	echo "please create a partition in the disk image ($imgfile) manually."
	exit 0
fi
	
if [ $? != 0 ]; then
	echo 'failed to create partition' >&2
	exit 1
fi

echo
echo 'done. happy hacking!'
